spring:
  application:
    name: gradus
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
#    defer-datasource-initialization: true
  config:
    import: vault://
  cloud:
    vault:
      authentication: token
      token: ${VAULT_TOKEN}
      kv:
        backend: secret
        default-context: gradus-keyvault
      ssl:
        trust-store: classpath:vault-trust.jks
        trust-store-password: ${VAULT_TRUST_STORE_PASSWORD}
      uri: https://localhost:8200
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${db.url}
    username: ${db.username}
    password: ${db.password}
  jackson:
    deserialization:
      fail-on-unknown-properties: false
    time-zone: Europe/Bucharest
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${smtp.username}
    password: ${smtp.password}
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
  servlet:
    multipart:
      enabled: true
      max-file-size: 5MB
      max-request-size: 6MB
#  sql:
#    init:
#      mode: always
#      schema-locations: classpath:schema.sql

server:
  port: 8443
  ssl:
    enabled: true
    key-store: classpath:keystore.p12
    key-store-password: changeme
    key-store-type: PKCS12
    key-alias: gradus

jwt:
  access-token-expiration: 900000
  refresh-token-expiration: 604800000
#  access-token-expiration: 30000
#  refresh-token-expiration: 5000

minio:
  url: ${minio.url}
  accessKey: ${minio.accessKey}
  secretKey: ${minio.secretKey}
  bucketName: ${minio.bucketName}
  trust-store: classpath:minio-trust.jks
  trust-store-password: ${MINIO_TRUST_STORE_PASSWORD}

watermarking:
  enc:
    secret: ${watermarking.enc.secret}

biometrics:
  api-key: ${biometrics.api-key}